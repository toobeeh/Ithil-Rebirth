/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl typo admin and auth api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LobbyPlayerDto } from './LobbyPlayerDto';
import {
    LobbyPlayerDtoFromJSON,
    LobbyPlayerDtoFromJSONTyped,
    LobbyPlayerDtoToJSON,
} from './LobbyPlayerDto';

/**
 * 
 * @export
 * @interface LobbyDetailsDto
 */
export interface LobbyDetailsDto {
    /**
     * The lobby language
     * @type {string}
     * @memberof LobbyDetailsDto
     */
    language: string;
    /**
     * The lobby link
     * @type {string}
     * @memberof LobbyDetailsDto
     */
    link: string;
    /**
     * Indicator if the lobby is private
     * @type {boolean}
     * @memberof LobbyDetailsDto
     */
    _private: boolean;
    /**
     * The lobby's current round
     * @type {string}
     * @memberof LobbyDetailsDto
     */
    round: string;
    /**
     * The lobby's current round
     * @type {Array<LobbyPlayerDto>}
     * @memberof LobbyDetailsDto
     */
    players: Array<LobbyPlayerDto>;
}

/**
 * Check if a given object implements the LobbyDetailsDto interface.
 */
export function instanceOfLobbyDetailsDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "language" in value;
    isInstance = isInstance && "link" in value;
    isInstance = isInstance && "_private" in value;
    isInstance = isInstance && "round" in value;
    isInstance = isInstance && "players" in value;

    return isInstance;
}

export function LobbyDetailsDtoFromJSON(json: any): LobbyDetailsDto {
    return LobbyDetailsDtoFromJSONTyped(json, false);
}

export function LobbyDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LobbyDetailsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'language': json['Language'],
        'link': json['Link'],
        '_private': json['Private'],
        'round': json['Round'],
        'players': ((json['Players'] as Array<any>).map(LobbyPlayerDtoFromJSON)),
    };
}

export function LobbyDetailsDtoToJSON(value?: LobbyDetailsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Language': value.language,
        'Link': value.link,
        'Private': value._private,
        'Round': value.round,
        'Players': ((value.players as Array<any>).map(LobbyPlayerDtoToJSON)),
    };
}

